FROM alpine:3.16

RUN apk update && \
	apk add \
	shadow \
	bash \
	git \
	make \
	bison \
	flex \
	gcc \
	g++ \
	ccache \
	gdb \
	wget \
	diffutils \
	perl \
	perl-libwww \
	perl-lwp-protocol-https  \
	libxml2-dev \
	libxslt-dev  \
	openssl-dev \
	zlib-dev \
	readline-dev \
	perl-ipc-run \
	perl-utils \
	perl-dev \
	python3 \
	python3-dev \
	tcl \
	tcl-dev \
	libintl \
	gettext-dev \
	linux-headers

# openldap-dev conflicts with openssl-dev - wonderful!

ARG uid
ARG gid
RUN groupadd -r app -g ${gid:-1000} && \
	useradd -u ${uid:-1000} -r -g app -m -d /app -s /sbin/nologin \
			-c "App user" app && \
    chmod 755 /app

# Set the working directory to app home directory
WORKDIR /app

# Specify the user to execute all commands below
USER app

# ENV PATH /app:${PATH}

# RUN git clone https://github.com/pgbuildfarm/client-code.git /app

# RUN cp build-farm.conf.sample build-farm.conf
# RUN sed -i -e /--with-ldap/d build-farm.conf
# RUN sed -i -e /--with-gssapi/d build-farm.conf
# RUN sed -i -e /--enable-nls/d build-farm.conf

# COPY --chown=app:app build-fromsource.conf /app

# RUN mkdir buildroot

# we can do this when testing - once we know we have the packages right
# it's a waste of time
# RUN ./run_build.pl --test --delay-check || \
#  { ls -rt buildroot/HEAD/CHANGEME.lastrun-logs/*.log | grep -v config.log | \
#    tail -n 1 | xargs cat && exit 1; }

# we'll mount this at run time, as it's the persistent storage we want
#RUN rm -rf buildroot/*

# RUN ls -l
